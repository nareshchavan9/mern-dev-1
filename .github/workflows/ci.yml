name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}      - name: Backend - Setup & Test
        run: |
          cd backend
          npm ci
          echo "MONGODB_URI=mongodb://localhost:27017/test" > .env
          echo "JWT_SECRET=test-secret" >> .env
          echo "NODE_ENV=test" >> .env
          npm run test:ci
        env:
          CI: true
          NODE_ENV: test
          FORCE_COLOR: true
        timeout-minutes: 5

      - name: Frontend - Setup & Test
        run: |
          cd frontend
          npm ci
          npm run test:ci
        env:
          CI: true
          FORCE_COLOR: true
        timeout-minutes: 5

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        if: always()  # Upload coverage even if tests fail
        with:
          files: |
            ./backend/coverage/lcov.info
            ./frontend/coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true

      - name: Archive test results
        if: always()  # Archive results even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            ./backend/coverage/
            ./frontend/coverage/
          retention-days: 30
