name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Backend Dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-npm-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-backend-

      - name: Cache Frontend Dependencies
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-npm-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-frontend-      - name: Install Dependencies
        run: npm ci
        
      - name: Setup Backend Environment
        run: |
          cd backend
          echo "MONGODB_URI=mongodb://localhost:27017/test" > .env
          echo "JWT_SECRET=test-secret" >> .env
          echo "NODE_ENV=test" >> .env
        
      - name: Run Tests
        run: npm run test
        env:
          CI: true
          NODE_ENV: test

      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          files: |
            ./backend/coverage/lcov.info
            ./frontend/coverage/lcov.info
          flags: unittests
          fail_ci_if_error: true
